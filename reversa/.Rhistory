library(stringr)
library(dplyr)
library(lubridate)
library(tibble)
library(RODBC)
library(furrr)
future::availableCores()
n_cores <- 5
plan(strategy = multisession, workers = n_cores)
install.packages("doParallel")
library(doParallel)
detectCores()
library(stringr)
library(stringr)
library(stringr)
library(dplyr)
library(lubridate)
library(tibble)
library(RODBC)
library(furrr)
future::availableCores()
n_cores <- 5
plan(strategy = multisession, workers = n_cores)
# Venda média dia (vmd) ====
vmd <- str_c("
DECLARE @DATA01 DATE
DECLARE @DATA02 DATE
DECLARE @DATA03 DATE
DECLARE @DATA04 DATE
DECLARE @DATA05 DATE
DECLARE @DATA06 DATE
DECLARE @DATA07 DATE
SET @DATA01= DATEADD(DAY,-181,GETDATE())
SET @DATA02= DATEADD(DAY,30,@DATA01)
SET @DATA03= DATEADD(DAY,30,@DATA02)
SET @DATA04= DATEADD(DAY,30,@DATA03)
SET @DATA05= DATEADD(DAY,30,@DATA04)
SET @DATA06= DATEADD(DAY,30,@DATA05)
SET @DATA07= DATEADD(DAY,30,@DATA06)
SELECT
T1.Filial
,T1.Produto
,CAST( SUM(
CASE
WHEN (T1.DT_OCORR_REAL > @DATA01 AND T1.DT_OCORR_REAL <= @DATA02)
AND T1.QTDVENDA > 0 THEN T1.QTDVENDA  *0.03
WHEN (T1.DT_OCORR_REAL > @DATA02 AND T1.DT_OCORR_REAL <= @DATA03)
AND T1.QTDVENDA > 0 THEN T1.QTDVENDA*0.07
WHEN (T1.DT_OCORR_REAL > @DATA03  AND T1.DT_OCORR_REAL <= @DATA04)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.1
WHEN (T1.DT_OCORR_REAL > @DATA04 AND T1.DT_OCORR_REAL <= @DATA05)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.2
WHEN (T1.DT_OCORR_REAL>@DATA05 AND T1.DT_OCORR_REAL<=@DATA06)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.27
WHEN (T1.DT_OCORR_REAL>@DATA06 AND T1.DT_OCORR_REAL<=@DATA07)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.33
ELSE 0
END)/30 AS DECIMAL(20,6)) AS VMD
,CONVERT(DATE, GETDATE()) AS DataAtualizacao
FROM (
SELECT
KF.KAFI_CD_FILIAL AS Filial
,KF.KAFI_CD_PRODUTO AS Produto
,KF.KAFI_QT_MOV AS QTDVENDA
,CONVERT(DATE, KF.KAFI_DH_OCORRREAL) AS DT_OCORR_REAL
FROM KARDEX_FILIAL KF WITH(NOLOCK)
INNER JOIN PRODUTO_MESTRE PM WITH(NOLOCK)
ON KF.KAFI_CD_PRODUTO = PM.PRME_CD_PRODUTO
INNER JOIN FILIAL FL WITH(NOLOCK)
ON KF.KAFI_CD_FILIAL = FL.FILI_CD_FILIAL
WHERE
KF.KAFI_TP_MOV IN('SV')
AND CONVERT(DATE, KF.KAFI_DH_OCORRREAL) BETWEEN
@DATA01 AND @DATA07
AND CONVERT(DATE,PM.XXXX_DH_CAD) < @DATA01 AND CONVERT(DATE,FL.XXXX_DH_CAD) < @DATA01
AND PM.CAPN_CD_CATEGORIA NOT LIKE '3%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.101.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.102.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '2.504.001%'
UNION ALL
SELECT
KFD.KAFI_CD_FILIAL AS FILIAL
,KFD.KAFI_CD_PRODUTO AS CODPROD
,KFD.KAFI_QT_MOV AS QTDVENDA
,KFD.KAFI_DH_OCORRREAL AS DT_OCORR_REAL
FROM KARDEX_FILIAL_DIA KFD WITH(NOLOCK)
INNER JOIN PRODUTO_MESTRE PM WITH(NOLOCK)
ON KFD.KAFI_CD_PRODUTO = PM.PRME_CD_PRODUTO
INNER JOIN FILIAL FL WITH(NOLOCK)
ON KFD.KAFI_CD_FILIAL = FL.FILI_CD_FILIAL
WHERE
KFD.KAFI_TP_MOV IN('SV')
AND CONVERT(DATE,KFD.KAFI_DH_OCORRREAL) BETWEEN @DATA01 AND @DATA07
AND CONVERT(DATE,PM.XXXX_DH_CAD) <@DATA01 AND FL.XXXX_DH_CAD <@DATA01
AND PM.CAPN_CD_CATEGORIA NOT LIKE '3%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.101.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.102.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '2.504.001%'
) T1
GROUP BY
T1.Filial
,T1.Produto", pattern = " ")
# Base reversa (consReversa) ====
consReversa <- str_c("SELECT
CAST(PF.FILI_CD_FILIAL AS NUMERIC) AS FILIAL,
CAST(PF.PRME_CD_PRODUTO AS NUMERIC) AS PRODUTO,
CAST(F.CODIGO_DEPOSITO_PRINCIPAL AS NUMERIC) AS DEPOSITO,
CAST(PM.PRME_NR_DV AS NUMERIC) AS AS NR_DV,
PF.PRFI_FL_SITUACAO AS SITUACAO,
CAST(ISNULL(PF.ESTQUE_ALVO, 0) AS NUMERIC) AS EA,
IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO), 'A', 'D') AS SIT_FAC,
CAST(IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND  PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO),
PF.PRFI_QT_UNDFAC, 0) AS NUMERIC) AS QTD_FAC,
CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) AS QT_ESTOQATUAL,
CAST(PF.PRFI_QT_ESTOQATUAL * PF.PRFI_VL_CMPG AS MONEY) AS VL_ESTOQUE,
CAST(PF.PRFI_VL_CMPG AS MONEY) AS VL_CMPG,
CAST(PF.PRFI_DT_ULTVENDA AS DATE) AS DT_ULTVENDA
FROM DBO.PRODUTO_FILIAL PF
INNER JOIN DBO.FILIAL F ON PF.FILI_CD_FILIAL = F.FILI_CD_FILIAL
INNER JOIN DBO.PRODUTO_MESTRE PM ON PF.PRME_CD_PRODUTO = PM.PRME_CD_PRODUTO
WHERE
CONVERT(DATE, PM.XXXX_DH_CAD) < DATEADD(DAY, 1,DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CONVERT(DATE, PF.XXXX_DH_CAD) < DATEADD(DAY, 1,DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) > 0
AND (DATEDIFF(MONTH, PF.PRFI_DT_ULTVENDA, GETDATE()) >= 3 OR PF.PRFI_DT_ULTVENDA IS NULL)", pattern = " ")
rm(vmd)
# Venda média dia (vmd) ====
baseVmd <- str_c("
DECLARE @DATA01 DATE
DECLARE @DATA02 DATE
DECLARE @DATA03 DATE
DECLARE @DATA04 DATE
DECLARE @DATA05 DATE
DECLARE @DATA06 DATE
DECLARE @DATA07 DATE
SET @DATA01= DATEADD(DAY,-181,GETDATE())
SET @DATA02= DATEADD(DAY,30,@DATA01)
SET @DATA03= DATEADD(DAY,30,@DATA02)
SET @DATA04= DATEADD(DAY,30,@DATA03)
SET @DATA05= DATEADD(DAY,30,@DATA04)
SET @DATA06= DATEADD(DAY,30,@DATA05)
SET @DATA07= DATEADD(DAY,30,@DATA06)
SELECT
T1.Filial
,T1.Produto
,CAST( SUM(
CASE
WHEN (T1.DT_OCORR_REAL > @DATA01 AND T1.DT_OCORR_REAL <= @DATA02)
AND T1.QTDVENDA > 0 THEN T1.QTDVENDA  *0.03
WHEN (T1.DT_OCORR_REAL > @DATA02 AND T1.DT_OCORR_REAL <= @DATA03)
AND T1.QTDVENDA > 0 THEN T1.QTDVENDA*0.07
WHEN (T1.DT_OCORR_REAL > @DATA03  AND T1.DT_OCORR_REAL <= @DATA04)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.1
WHEN (T1.DT_OCORR_REAL > @DATA04 AND T1.DT_OCORR_REAL <= @DATA05)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.2
WHEN (T1.DT_OCORR_REAL>@DATA05 AND T1.DT_OCORR_REAL<=@DATA06)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.27
WHEN (T1.DT_OCORR_REAL>@DATA06 AND T1.DT_OCORR_REAL<=@DATA07)
AND T1.QTDVENDA>0 THEN T1.QTDVENDA*0.33
ELSE 0
END)/30 AS DECIMAL(20,6)) AS VMD
,CONVERT(DATE, GETDATE()) AS DataAtualizacao
FROM (
SELECT
KF.KAFI_CD_FILIAL AS Filial
,KF.KAFI_CD_PRODUTO AS Produto
,KF.KAFI_QT_MOV AS QTDVENDA
,CONVERT(DATE, KF.KAFI_DH_OCORRREAL) AS DT_OCORR_REAL
FROM KARDEX_FILIAL KF WITH(NOLOCK)
INNER JOIN PRODUTO_MESTRE PM WITH(NOLOCK)
ON KF.KAFI_CD_PRODUTO = PM.PRME_CD_PRODUTO
INNER JOIN FILIAL FL WITH(NOLOCK)
ON KF.KAFI_CD_FILIAL = FL.FILI_CD_FILIAL
WHERE
KF.KAFI_TP_MOV IN('SV')
AND CONVERT(DATE, KF.KAFI_DH_OCORRREAL) BETWEEN
@DATA01 AND @DATA07
AND CONVERT(DATE,PM.XXXX_DH_CAD) < @DATA01 AND CONVERT(DATE,FL.XXXX_DH_CAD) < @DATA01
AND PM.CAPN_CD_CATEGORIA NOT LIKE '3%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.101.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.102.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '2.504.001%'
UNION ALL
SELECT
KFD.KAFI_CD_FILIAL AS FILIAL
,KFD.KAFI_CD_PRODUTO AS CODPROD
,KFD.KAFI_QT_MOV AS QTDVENDA
,KFD.KAFI_DH_OCORRREAL AS DT_OCORR_REAL
FROM KARDEX_FILIAL_DIA KFD WITH(NOLOCK)
INNER JOIN PRODUTO_MESTRE PM WITH(NOLOCK)
ON KFD.KAFI_CD_PRODUTO = PM.PRME_CD_PRODUTO
INNER JOIN FILIAL FL WITH(NOLOCK)
ON KFD.KAFI_CD_FILIAL = FL.FILI_CD_FILIAL
WHERE
KFD.KAFI_TP_MOV IN('SV')
AND CONVERT(DATE,KFD.KAFI_DH_OCORRREAL) BETWEEN @DATA01 AND @DATA07
AND CONVERT(DATE,PM.XXXX_DH_CAD) <@DATA01 AND FL.XXXX_DH_CAD <@DATA01
AND PM.CAPN_CD_CATEGORIA NOT LIKE '3%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.101.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '1.102.009%'
AND PM.CAPN_CD_CATEGORIA NOT LIKE '2.504.001%'
) T1
GROUP BY
T1.Filial
,T1.Produto", pattern = " ")
# Base reversa (consReversa) ====
consReversa <- str_c("SELECT
CAST(PF.FILI_CD_FILIAL AS NUMERIC) AS FILIAL,
CAST(PF.PRME_CD_PRODUTO AS NUMERIC) AS PRODUTO,
CAST(F.CODIGO_DEPOSITO_PRINCIPAL AS NUMERIC) AS DEPOSITO,
CAST(PM.PRME_NR_DV AS NUMERIC) AS AS NR_DV,
PF.PRFI_FL_SITUACAO AS SITUACAO,
CAST(ISNULL(PF.ESTQUE_ALVO, 0) AS NUMERIC) AS EA,
IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO), 'A', 'D') AS SIT_FAC,
CAST(IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND  PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO),
PF.PRFI_QT_UNDFAC, 0) AS NUMERIC) AS QTD_FAC,
CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) AS QT_ESTOQATUAL,
CAST(PF.PRFI_QT_ESTOQATUAL * PF.PRFI_VL_CMPG AS MONEY) AS VL_ESTOQUE,
CAST(PF.PRFI_VL_CMPG AS MONEY) AS VL_CMPG,
CAST(PF.PRFI_DT_ULTVENDA AS DATE) AS DT_ULTVENDA
FROM DBO.PRODUTO_FILIAL PF
INNER JOIN DBO.FILIAL F ON PF.FILI_CD_FILIAL = F.FILI_CD_FILIAL
INNER JOIN DBO.PRODUTO_MESTRE PM ON PF.PRME_CD_PRODUTO = PM.PRME_CD_PRODUTO
WHERE
CONVERT(DATE, PM.XXXX_DH_CAD) < DATEADD(DAY, 1,DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CONVERT(DATE, PF.XXXX_DH_CAD) < DATEADD(DAY, 1,DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) > 0
AND (DATEDIFF(MONTH, PF.PRFI_DT_ULTVENDA, GETDATE()) >= 3 OR PF.PRFI_DT_ULTVENDA IS NULL)", pattern = " ")
library(RODBC)
getwd()
con <- odbcDriverConnect('driver={SQL Server} ;server=cosmos;database=cosmos_v14b')
con <- odbcDriverConnect('driver={SQL Server};server=cosmos;database=cosmos_v14b')
vmd <- sqlQuery(con, baseVmd)
baseReversa <- sqlQuery(con, consReversa)
baseReversa
baseReversa <- sqlQuery(con, consReversa)
consReversa <- str_c("
SELECT
CAST(PF.FILI_CD_FILIAL AS NUMERIC) AS FILIAL,
CAST(PF.PRME_CD_PRODUTO AS NUMERIC) AS PRODUTO,
CAST(F.CODIGO_DEPOSITO_PRINCIPAL AS NUMERIC) AS DEPOSITO,
CAST(PM.PRME_NR_DV AS NUMERIC) AS NR_DV,
PF.PRFI_FL_SITUACAO AS SITUACAO,
CAST(ISNULL(PF.ESTQUE_ALVO, 0) AS NUMERIC) AS EA,
IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO), 'A', 'D') AS SIT_FAC,
CAST(IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND  PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO),
PF.PRFI_QT_UNDFAC, 0) AS NUMERIC) AS QTD_FAC,
CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) AS QT_ESTOQATUAL,
CAST(PF.PRFI_QT_ESTOQATUAL * PF.PRFI_VL_CMPG AS MONEY) AS VL_ESTOQUE,
CAST(PF.PRFI_VL_CMPG AS MONEY) AS VL_CMPG,
CAST(PF.PRFI_DT_ULTVENDA AS DATE) AS DT_ULTVENDA
FROM DBO.PRODUTO_FILIAL PF
INNER JOIN DBO.FILIAL F ON PF.FILI_CD_FILIAL = F.FILI_CD_FILIAL
INNER JOIN DBO.PRODUTO_MESTRE PM ON PF.PRME_CD_PRODUTO = PM.PRME_CD_PRODUTO
WHERE
CONVERT(DATE, PM.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CONVERT(DATE, PF.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) > 0
AND (DATEDIFF(MONTH, PF.PRFI_DT_ULTVENDA, GETDATE()) >= 3 OR PF.PRFI_DT_ULTVENDA IS NULL)", pattern = " ")
vmd[4] <- NULL
View(vmd)
write.table(vmd, "baseVMD.txt", row.names = F)
baseReversa <- sqlQuery(con, consReversa)
write.table(baseReversa, "baseReversa.txt", row.names = F)
summary(baseReversa)
summary(vmd)
base <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial"))
gc()
base <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial"))
library(doParallel)
nc1 <- detectCores()
nc1
c1 <- makeCluster(nc1)
registerDoParallel(c1)
base <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial"))
library(stringr)
library(dplyr)
library(lubridate)
library(tibble)
library(RODBC)
library(furrr)
library(doParallel)
nc1 <- detectCores()
c1 <- makeCluster(nc1)
registerDoParallel(c1)
View(c1)
write.table("baseVMD.txt", header = T)
vmd = read.table("baseVMD.txt", header = T)
baseReversa = read.table("baseReversa.txt", header = T)
base <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial"))
baseReversa <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial"))
baseReversa <- baseReversa %>%
inner_join(vmd, by = c("FILIAL" = "Filial", "PRODUTO" = "Produto"))
baseReversa = read.table("baseReversa.txt", header = T)
baseReversa <- baseReversa %>%
left_join(vmd, by = c("FILIAL" = "Filial", "PRODUTO" = "Produto"))
rm(vmd)
View(baseReversa)
names(baseReversa)
pme <- function(base){
base <- base %>%
mutate(
FLAG_SV <- ifelse(is.na(VMD) | VMD == 0, "SEM VENDA", "PME"),
PME_90 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*90))),
VL_90 <- PME_90 * (VL_CMPG),
PME_120 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*120))),
VL_120 <- PME_120 * (VL_CMPG),
PME_150 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*150))),
VL_150 <- PME_150 * (VL_CMPG),
PME_180 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*180))),
VL_180 <- PME_180 * (VL_CMPG),
PME_300 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*300))),
VL_300 <- PME_300 * (VL_CMPG),
PME_360 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*360))),
VL_360 <- PME_360 * (VL_CMPG),
PME_760 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQUEATUAL/(VMD*760))),
VL_760 <- PME_760 * (VL_CMPG)
)
}
baseReversa <- pme(baseReversa)
pme <- function(base){
base <- base %>%
mutate(
FLAG_SV <- ifelse(is.na(VMD) | VMD == 0, "SEM VENDA", "PME"),
PME_90 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*90))),
VL_90 <- PME_90 * (VL_CMPG),
PME_120 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*120))),
VL_120 <- PME_120 * (VL_CMPG),
PME_150 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*150))),
VL_150 <- PME_150 * (VL_CMPG),
PME_180 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*180))),
VL_180 <- PME_180 * (VL_CMPG),
PME_300 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*300))),
VL_300 <- PME_300 * (VL_CMPG),
PME_360 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*360))),
VL_360 <- PME_360 * (VL_CMPG),
PME_760 <- ifelse(is.na(VMD), 0, as.integer(QT_ESTOQATUAL/(VMD*760))),
VL_760 <- PME_760 * (VL_CMPG)
)
}
baseReversa <- pme(baseReversa)
summary(baseReversa)
baseReversa <- baseReversa %>%
select(- VL_760 <- PME_760 * (VL_CMPG))
baseReversa <- baseReversa %>%
select(- "VL_760 <- PME_760 * (VL_CMPG)")
summary(baseReversa)
library(data.table)
baseReversa <- baseReversa %>%
select(- names %like% "PME_")
baseReversa <- baseReversa %>%
select(- (names %like% "PME_"))
names(baseReversa)
rm(baseReversa)
vmd <- sqlQuery(con, baseVmd)
vmd = read.table("baseVMD.txt", header = T)
gc()
baseReversa = read.table("baseReversa.txt", header = T)
gc()
baseReversa <- baseReversa %>%
left_join(vmd, by = c("FILIAL" = "Filial", "PRODUTO" = "Produto"))
rm(vmd)
summary(baseReversa$QTD_FAC)
src(baseReversa$QTD_FAC)
consultaReversa <- str_c("
SELECT
CAST(PF.FILI_CD_FILIAL AS NUMERIC) AS FILIAL,
CAST(PF.PRME_CD_PRODUTO AS NUMERIC) AS PRODUTO,
CAST(F.CODIGO_DEPOSITO_PRINCIPAL AS NUMERIC) AS DEPOSITO,
CAST(PM.PRME_NR_DV AS NUMERIC) AS NR_DV,
PF.PRFI_FL_SITUACAO AS SITUACAO,
CAST(ISNULL(PF.ESTQUE_ALVO, 0) AS NUMERIC) AS EA,
IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO), 'A', 'D') AS SIT_FAC,
CAST(IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND  PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO),
PF.PRFI_QT_UNDFAC, 0) AS NUMERIC) AS QTD_FAC,
CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) AS QT_ESTOQATUAL,
CAST(PF.PRFI_QT_ESTOQATUAL * PF.PRFI_VL_CMPG AS MONEY) AS VL_ESTOQUE,
CAST(PF.PRFI_VL_CMPG AS MONEY) AS VL_CMPG,
CAST(PF.PRFI_DT_ULTVENDA AS DATE) AS DT_ULTVENDA
FROM DBO.PRODUTO_FILIAL PF
INNER JOIN DBO.FILIAL F ON PF.FILI_CD_FILIAL = F.FILI_CD_FILIAL
INNER JOIN DBO.PRODUTO_MESTRE PM ON PF.PRME_CD_PRODUTO = PM.PRME_CD_PRODUTO
WHERE
CONVERT(DATE, PM.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CONVERT(DATE, PF.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) > 0
--AND (DATEDIFF(MONTH, PF.PRFI_DT_ULTVENDA, GETDATE()) >= 3 OR PF.PRFI_DT_ULTVENDA IS NULL)", pattern = " ")
rm(baseReversa)
con <- odbcDriverConnect('driver={SQL Server};server=cosmos;database=cosmos_v14b')
baseReversa <- sqlQuery(con, consReversa)
consultaReversa <- str_c("
SELECT
CAST(PF.FILI_CD_FILIAL AS NUMERIC) AS FILIAL,
CAST(PF.PRME_CD_PRODUTO AS NUMERIC) AS PRODUTO,
CAST(F.CODIGO_DEPOSITO_PRINCIPAL AS NUMERIC) AS DEPOSITO,
CAST(PM.PRME_NR_DV AS NUMERIC) AS NR_DV,
PF.PRFI_FL_SITUACAO AS SITUACAO,
CAST(ISNULL(PF.ESTQUE_ALVO, 0) AS NUMERIC) AS EA,
IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO), 'A', 'D') AS SIT_FAC,
CAST(IIF((PF.PRFI_DT_FIMVALFARE > GETDATE() AND  PF.PRFI_QT_UNDFAC > PF.ESTQUE_ALVO),
PF.PRFI_QT_UNDFAC, 0) AS NUMERIC) AS QTD_FAC,
CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) AS QT_ESTOQATUAL,
CAST(PF.PRFI_QT_ESTOQATUAL * PF.PRFI_VL_CMPG AS MONEY) AS VL_ESTOQUE,
CAST(PF.PRFI_VL_CMPG AS MONEY) AS VL_CMPG,
CAST(PF.PRFI_DT_ULTVENDA AS DATE) AS DT_ULTVENDA
FROM DBO.PRODUTO_FILIAL PF
INNER JOIN DBO.FILIAL F ON PF.FILI_CD_FILIAL = F.FILI_CD_FILIAL
INNER JOIN DBO.PRODUTO_MESTRE PM ON PF.PRME_CD_PRODUTO = PM.PRME_CD_PRODUTO
WHERE
CONVERT(DATE, PM.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CONVERT(DATE, PF.XXXX_DH_CAD) < DATEADD(DAY, 1, DATEADD(MONTH,-5, EOMONTH(GETDATE())))
AND CAST(PF.PRFI_QT_ESTOQATUAL AS NUMERIC) > 0
--AND (DATEDIFF(MONTH, PF.PRFI_DT_ULTVENDA, GETDATE()) >= 3 OR PF.PRFI_DT_ULTVENDA IS NULL)", pattern = " ")
baseReversa <- sqlQuery(con, consReversa)
baseReversa <- sqlQuery(con, consultaReversa)
write.table(baseReversa, "baseReversa.txt", row.names = F)
library(Writexl)
library(write)
library(WriteXLS)
library(writexl)
write_xlsx(basew, "C:\\Users\\113024\\paguemenos.com.br\\Time Perda Conhecida - General\\William\\base.xlsx")
write_xlsx(basew, "C:\Users\\113024\\paguemenos.com.br\\Time Perda Conhecida - General\\William\\base.xlsx")
source('~/.active-rstudio-document')
head(basew)
library(dplyr)
basew %>%
group_by(CODIGO_DEPOSITO_PRINCIPAL)%>%
summarise(total_produto = count(KAFI_CD_PRODUTO))
?ount()
?count
basew %>%
group_by(CODIGO_DEPOSITO_PRINCIPAL)%>%
summarise(total_produto = n()))
basew %>%
group_by(CODIGO_DEPOSITO_PRINCIPAL)%>%
summarise(total_produto = n())
baseReversa = read.table("baseReversa-COMPLETA.txt", header = T)
baseCD = read.table("baseCD.txt", header = T)
View(baseCD)
View(baseCD)
View(baseReversa)
View(baseCD)
baseCD$CAPACIDADE_90 <-vmd * 90
baseCD$CAPACIDADE_120 <- vmd * 120
baseCD$CAPACIDADE_150 <- vmd * 150
baseCD$CAPACIDADE_180 <- vmd * 180
baseCD$CAPACIDADE_360 <- vmd * 360
baseCD$CAPACIDADE_720 <- vmd * 720
head(baseCD)
names(vmdcd)
baseCD$CAPACIDADE_90 <-VMD * 90
baseCD$CAPACIDADE_120 <- VMD * 120
baseCD$CAPACIDADE_150 <- VMD * 150
baseCD$CAPACIDADE_180 <- VMD * 180
baseCD$CAPACIDADE_360 <- VMD * 360
baseCD$CAPACIDADE_720 <- VMD * 720
names(baseCD)
library(stringr)
library(dplyr)
library(lubridate)
library(tibble)
library(RODBC)
library(furrr)
library(doParallel)
library(data.table)
library(zoo)
colnames.baseCD
colnames(baseCD)
colnames(baseCD[colnames(baseCD) %like% 'PME'])
baseCD <- select(baseCD, -(colnames(baseCD) %like% 'PME'))
colnames(baseCD[colnames(baseCD) %like% 'PME_'])
lista <- colnames(baseCD[colnames(baseCD) %like% 'PME_'])
baseCD <- baseCD %>%
select(-lista)
baseCD <- baseCD %>%
select(-(colnames %like% 'PME_'))
baseCD[colnames(baseCD) %like% 'PME_'] <- NULL
colnames(baseCD)
baseCD$CAPACIDADE_30 <- round(baseFilial$VMD * 30)
baseCD$CAPACIDADE_60 <- round(baseFilial$VMD * 60)
baseCD$CAPACIDADE_90 <- round(baseFilial$VMD * 90)
baseCD$CAPACIDADE_120 <- round(baseFilial$VMD * 120)
baseCD$CAPACIDADE_150 <- round(baseFilial$VMD * 150)
baseCD$CAPACIDADE_180 <- round(baseFilial$VMD * 180)
baseCD$CAPACIDADE_360 <- round(baseFilial$VMD * 360)
baseCD$CAPACIDADE_720 <- round(baseFilial$VMD * 720)
baseCD$CAPACIDADE_30 <- round(baseCD$VMD * 30)
baseCD$CAPACIDADE_60 <- round(baseCD$VMD * 60)
baseCD$CAPACIDADE_90 <- round(baseCD$VMD * 90)
baseCD$CAPACIDADE_120 <- round(baseCD$VMD * 120)
baseCD$CAPACIDADE_150 <- round(baseCD$VMD * 150)
baseCD$CAPACIDADE_180 <- round(baseCD$VMD * 180)
baseCD$CAPACIDADE_360 <- round(baseCD$VMD * 360)
baseCD$CAPACIDADE_720 <- round(baseCD$VMD * 720)
View(baseCD)
write.table(baseCD, "baseCD.txt", row.names = F)
